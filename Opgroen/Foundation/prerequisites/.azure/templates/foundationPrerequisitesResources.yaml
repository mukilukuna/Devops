parameters:
  - name: azureResourceManagerConnection
    type: string
  - name: location
    type: string
    default: 'westeurope'
  - name: hubSubscriptionId
    type: string
  - name: managementSubscriptionId
    type: string
  - name: identitySubscriptionId
    type: string
  - name: variableGroup
    type: string
  - name: variableFile
    type: string
  - name: AZURE_DEVOPS_EXT_PAT
    type: string
    default: $(System.AccessToken)
  - name: organization
    type: string
    default: $(System.TeamFoundationCollectionUri)
  - name: project
    type: string
    default: $(System.TeamProject)

stages:
- stage: PrerequisitesResources
  dependsOn: 'corporateMGandSubscriptionMove'
  displayName: Deploy Prerequisites Resources
  variables:
    - template: ${{ parameters.variableFile }}
  jobs:
  - job: identityPrerequisites
    variables:
      outputVariableGroup: 'Platform-Identity-Weu'
      outputPrefix: 'idenWeu'
    displayName: Deploy Identity Prerequisites
    steps:
      - template: /Features/BicepDeploymentSub/Pipeline/tasks.yaml@Templates
        parameters:
          targetFiles: |
            /$(System.DefaultWorkingDirectory)/Foundation/prerequisites/configs/*.json
          subscriptionId: ${{ parameters.identitySubscriptionId }}
          csmFile: "/prerequisites/modules/foundationIdentityPrerequisites.bicep"
          azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          templateRepo: ${{ variables.templateRepo }}
          templateProject:  ${{ variables.templateProject }}
          version: ${{ variables.version }}
          overrideParameters: -environmentName $(environmentName) -workloadName $(workloadName) -regionName $(regionName)
      - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/staging'),  eq(variables['Build.SourceBranch'], 'refs/heads/foundationV2')) }}:
          - template: /.Global/Pipelines/addVariableToVariableGroup.yaml@Templates
            parameters:
              AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}
              organization: ${{ parameters.organization }}
              project: ${{ parameters.project }}
              preFix: $(outputPrefix)
              varMultiple: $(armOutputs)
              isSecret: false
              environment: $(outputVariableGroup)
              templateRepo: ${{ variables.templateRepo }}

  - job: ManagementPrerequisites
    displayName: Deploy Management Prerequisites
    variables:
      outputVariableGroup: 'Platform-Management-Weu'
      outputPrefix: mgmtWeu
    steps:
      - template: /Features/BicepDeploymentSub/Pipeline/tasks.yaml@Templates
        parameters:
          targetFiles: |
            /$(System.DefaultWorkingDirectory)/Foundation/prerequisites/configs/*.json
          subscriptionId: ${{ parameters.managementSubscriptionId }}
          csmFile: "/prerequisites/modules/foundationManagementPrerequisites.bicep"
          azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          templateRepo: ${{ variables.templateRepo }}
          templateProject:  ${{ variables.templateProject }}
          version: ${{ variables.version }}
          overrideParameters: -environmentName $(environmentName) -workloadName $(workloadName) -regionName $(regionName)
      - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/staging'),  eq(variables['Build.SourceBranch'], 'refs/heads/foundationV2')) }}:
          - template: /.Global/Pipelines/addVariableToVariableGroup.yaml@Templates
            parameters:
              AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}
              organization: ${{ parameters.organization }}
              project: ${{ parameters.project }}
              preFix: $(outputPrefix)
              varMultiple: $(armOutputs)
              isSecret: false
              environment: $(outputVariableGroup)
              templateRepo: ${{ variables.templateRepo }}

  - job: connnectivityPrerequisites
    displayName: Deploy Connectivity Prerequisites
    variables:
      outputVariableGroup: 'Platform-Connectivity-Weu'
      outputPrefix: connWeu
    steps:
      - template: /Features/BicepDeploymentSub/Pipeline/tasks.yaml@Templates
        parameters:
          targetFiles: |
            /$(System.DefaultWorkingDirectory)/Foundation/prerequisites/configs/*.json
          subscriptionId: ${{ parameters.hubSubscriptionId }}
          csmFile: "/prerequisites/modules/foundationConnectivityPrerequisites.bicep"
          azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          templateRepo: ${{ variables.templateRepo }}
          templateProject:  ${{ variables.templateProject }}
          version: ${{ variables.version }}
          overrideParameters: -environmentName $(environmentName) -workloadName $(workloadName) -regionName $(regionName)
      - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/staging'), eq(variables['Build.SourceBranch'], 'refs/heads/foundationV2')) }}:
          - template: /.Global/Pipelines/addVariableToVariableGroup.yaml@Templates
            parameters:
              AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}
              organization: ${{ parameters.organization }}
              project: ${{ parameters.project }}
              preFix: $(outputPrefix)
              varMultiple: $(armOutputs)
              isSecret: false
              environment: $(outputVariableGroup)
              templateRepo: ${{ variables.templateRepo }}

  - job: addOutputAzureFirewallPrivateIPHubSpoke
    displayName: Add Output AzureFirewall PrivateIP HubSpoke
    condition: eq(variables.hubmodel, 'customerManaged')
    variables:
      outputVariableGroup: 'Platform-Connectivity-Weu'
      outputPrefix: connWeu
      outputName: azureFirewall_PrivateIp # azureFirewallprivateIPFirewall
      outputValue: $(hubAddressSpacePrefix).68
    steps:
      - task: AzureCLI@2
        displayName: Add $(outputName) to var group $(outputVariableGroup)
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $varGroup = az pipelines variable-group list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" | ConvertFrom-Json | Where-Object { $_.name -eq "$(outputVariableGroup)" }
            if (!$varGroup) {
                Write-Output "Variable Group does not exist"
            } else {
                Write-Output "Updating variable group"
                $variables = az pipelines variable-group variable list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" | ConvertFrom-Json | Get-Member | Where-Object { $_.Name -eq "$(outputPrefix)-$(outputName)" }
                if (!$variables) {
                    Write-Output "Create new variable"
                    az pipelines variable-group variable create --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                } else {
                    Write-Output "Update new variable"
                    az pipelines variable-group variable update --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                }
            }
        env:
          AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}

  - job: addOutputAzureFirewallPrivateIPvWan
    displayName: Add Output AzureFirewall PrivateIP vWan
    condition: eq(variables.hubmodel, 'microsoftManaged')
    variables:
      outputVariableGroup: 'Platform-Connectivity-Weu'
      outputPrefix: connWeu
      outputName: azureFirewall_PrivateIp # azureFirewallprivateIPFirewall
      outputValue: $(hubAddressSpacePrefix).132
    steps:
      - task: AzureCLI@2
        displayName: Add $(outputName) to var group $(outputVariableGroup)
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $varGroup = az pipelines variable-group list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" | ConvertFrom-Json | Where-Object { $_.name -eq "$(outputVariableGroup)" }
            if (!$varGroup) {
                Write-Output "Variable Group does not exist"
            } else {
                Write-Output "Updating variable group"
                $variables = az pipelines variable-group variable list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" | ConvertFrom-Json | Get-Member | Where-Object { $_.Name -eq "$(outputPrefix)-$(outputName)" }
                if (!$variables) {
                    Write-Output "Create new variable"
                    az pipelines variable-group variable create --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                } else {
                    Write-Output "Update new variable"
                    az pipelines variable-group variable update --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                }
            }
        env:
          AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}

  - job: addOutputPrivateDNSresolverInboundEndpointsPrivateIpAddress
    displayName: Add Output privateDNSResolver InboundEndpoints PrivateIP
    condition: eq(variables.privateDNSResolver, 'yes')
    variables:
      outputVariableGroup: 'Platform-Identity-Weu'
      outputPrefix: idenWeu
      outputName: privateDNSResolver_InboundEndpointsPrivateIpAddress # Inbound Endpoint Private DNS Resolver
      outputValue: $(idenAddressSpacePrefix).36
    steps:
      - task: AzureCLI@2
        displayName: Add $(outputName) to var group $(outputVariableGroup)
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $varGroup = az pipelines variable-group list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" | ConvertFrom-Json | Where-Object { $_.name -eq "$(outputVariableGroup)" }
            if (!$varGroup) {
                Write-Output "Variable Group does not exist"
            } else {
                Write-Output "Updating variable group"
                $variables = az pipelines variable-group variable list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" | ConvertFrom-Json | Get-Member | Where-Object { $_.Name -eq "$(outputPrefix)-$(outputName)" }
                if (!$variables) {
                    Write-Output "Create new variable"
                    az pipelines variable-group variable create --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                } else {
                    Write-Output "Update new variable"
                    az pipelines variable-group variable update --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                }
            }
        env:
          AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}

  - job: addc01PrivateIpAddress
    displayName: Add Output addc01 PrivateIP
    condition: eq(variables.deployADDC, 'yes')
    variables:
      outputVariableGroup: 'Platform-Identity-Weu'
      outputPrefix: idenWeu
      outputName: virtualMachineAddc01_PrivateIp # PrivateIP addc01
      outputValue: $(idenAddressSpacePrefix).4
    steps:
      - task: AzureCLI@2
        displayName: Add $(outputName) to var group $(outputVariableGroup)
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $varGroup = az pipelines variable-group list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" | ConvertFrom-Json | Where-Object { $_.name -eq "$(outputVariableGroup)" }
            if (!$varGroup) {
                Write-Output "Variable Group does not exist"
            } else {
                Write-Output "Updating variable group"
                $variables = az pipelines variable-group variable list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" | ConvertFrom-Json | Get-Member | Where-Object { $_.Name -eq "$(outputPrefix)-$(outputName)" }
                if (!$variables) {
                    Write-Output "Create new variable"
                    az pipelines variable-group variable create --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                } else {
                    Write-Output "Update new variable"
                    az pipelines variable-group variable update --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                }
            }
        env:
          AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}

  - job: addc02PrivateIpAddress
    displayName: Add Output addc02 PrivateIP
    condition: eq(variables.deployADDC, 'yes')
    variables:
      outputVariableGroup: 'Platform-Identity-Weu'
      outputPrefix: idenWeu
      outputName: virtualMachineAddc02_PrivateIp # PrivateIP addc02
      outputValue: $(idenAddressSpacePrefix).5
    steps:
      - task: AzureCLI@2
        displayName: Add $(outputName) to var group $(outputVariableGroup)
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $varGroup = az pipelines variable-group list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" | ConvertFrom-Json | Where-Object { $_.name -eq "$(outputVariableGroup)" }
            if (!$varGroup) {
                Write-Output "Variable Group does not exist"
            } else {
                Write-Output "Updating variable group"
                $variables = az pipelines variable-group variable list --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" | ConvertFrom-Json | Get-Member | Where-Object { $_.Name -eq "$(outputPrefix)-$(outputName)" }
                if (!$variables) {
                    Write-Output "Create new variable"
                    az pipelines variable-group variable create --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                } else {
                    Write-Output "Update new variable"
                    az pipelines variable-group variable update --org "${{ parameters.organization }}" --project "${{ parameters.project }}" --group-id "$($varGroup.id)" --name $(outputPrefix)-$(outputName) --value $(outputValue) --secret $false --output table
                }
            }
        env:
          AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}