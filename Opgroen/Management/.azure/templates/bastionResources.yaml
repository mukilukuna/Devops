parameters:
  - name: azureResourceManagerConnection
    type: string
  - name: location
    type: string
    default: 'westeurope'
  - name: subscriptionId # Replace with or add managementGroupId if needed
    type: string
  - name: variableGroup
    type: string
  - name: variableFile
    type: string
  - name: AZURE_DEVOPS_EXT_PAT
    type: string
    default: $(System.AccessToken)
  - name: organization
    type: string
    default: $(System.TeamFoundationCollectionUri)
  - name: project
    type: string
    default: $(System.TeamProject)
  - name: delayRemoval
    type: string
    default: '60'

stages:
- stage: BastionOnDemand
  displayName: Bastion On Demand Pipeline for Cost Management.
  variables:
  - name: resourceGroup
    value: rg-infr-bastion-p-weu-01
  - template:  ${{ parameters.variableFile }}

  jobs:
  - job: ResourceGroup
    displayName: Bastion Resource Group
    steps:
      - template: /Features/ResourceGroup/Pipeline/tasks.yaml@templates
        parameters:
          subscriptionId: ${{ parameters.subscriptionId }}
          csmParametersFile: /$(parameterPath)/$(resourceGroup)/resourceGroup.json
          azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          templateRepo: ${{ variables.templateRepo }}
          templateProject:  ${{ variables.templateProject }}
          version: ${{ variables.version }}
      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
        - template: /.Global/Pipelines/addVariableToVariableGroup.yaml@Templates
          parameters:
            AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}
            organization: ${{ parameters.organization }}
            project: ${{ parameters.project }}
            varKey: mgmtWeu-BastionRG_ResourceName
            varValue: $(resourceName)
            isSecret: false
            environment: ${{ parameters.variableGroup }}
            templateRepo: $(templateRepo)

  - job: azureBastion
    displayName: Azure Bastion
    dependsOn:
      - resourceGroup
    steps:
      - template: /Features/AzureBastion/Pipeline/tasks.yaml@templates
        parameters:
          subscriptionId: ${{ parameters.subscriptionId }}
          resourceGroupName: $(resourceGroup)
          csmParametersFile: /$(parameterPath)/$(resourceGroup)/bastion.json
          azureResourceManagerConnection: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          templateRepo: ${{ variables.templateRepo }}
          templateProject:  ${{ variables.templateProject }}
          version: ${{ variables.version }}
      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
        - template: /.Global/Pipelines/addVariableToVariableGroup.yaml@Templates
          parameters:
            AZURE_DEVOPS_EXT_PAT: ${{ parameters.AZURE_DEVOPS_EXT_PAT }}
            organization: ${{ parameters.organization }}
            project: ${{ parameters.project }}
            varKey: $(outPutPrefix)-azureBastion_ResourceId
            varValue: $(resourceId)
            isSecret: false
            environment: ${{ parameters.variableGroup }}
            templateRepo: $(templateRepo)

  - job: delayRemoval
    displayName: Delay Removal by provided number of minutes
    timeoutInMinutes: 0
    dependsOn: azureBastion
    pool: server
    steps:
    - task: Delay@1
      inputs:
        delayForMinutes: ${{ parameters.delayRemoval }}

  - job: removebastion
    displayName: Removal of Azure Bastion Resource Goup
    dependsOn: delayRemoval
    steps:
    - task: AzurePowerShell@5
      displayName: 'Azure PowerShell script: InlineScript'
      inputs:
        azureSubscription: ${{ parameters.azureResourceManagerConnection }}
        ScriptType: InlineScript
        Inline: |
          write-host 'Script to remove the resource group that contains Azure Bastion'
          Write-Host 'Using Resource Group: $(resourceGroup)'
          Write-Host 'Using subscription: '
          Select-AzSubscription -SubscriptionId $(subscriptionId)
          Write-Host 'Using Resource Group: /subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroup)'
          Remove-AzResourceGroup -Id "/subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroup)" -Force
        azurePowerShellVersion: LatestVersion
