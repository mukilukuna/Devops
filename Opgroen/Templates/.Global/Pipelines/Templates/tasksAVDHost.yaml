parameters:
  - name: subscriptionId
    type: string
  - name: resourceGroupName
    type: string
  - name: azureResourceManagerConnection
    type: string
  - name: location
    type: string
  - name: csmParametersFile
    type: string
  - name: templateRepo
    type: string
  - name: templateProject
    type: string
  - name: version
    type: string
  - name: templateFileName
    type: string
    default: template.bicep
  - name: outPutPrefix
    type: string
    default: ''
  - name: useGeneratePasswordScript
    type: boolean
    default: true

steps:
  - ${{ if and(ne(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.SourceBranch'], 'refs/heads/staging')) }}:
      - checkout: self
      - checkout: git://${{ parameters.templateProject }}/${{ parameters.templateRepo }}@refs/tags/${{ parameters.version }}
      - template: /.Global/Pipelines/validate.yaml
        parameters:
          templateRepo: ${{ parameters.templateRepo }}
          templateFileName: ${{ parameters.templateFileName }}
          workloadName: AVDHost
          workloadType: Features
          subscriptionId: ${{ parameters.subscriptionId }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          parametersPath: ${{ parameters.csmParametersFile }}

  - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/staging')) }}:
      - checkout: self
      - checkout: git://${{ parameters.templateProject }}/${{ parameters.templateRepo }}@refs/tags/${{ parameters.version }}
      - pwsh: |
          "Found KeyVaultID $(keyvault-resourceId)"
          $keyVaultID = '$(keyvault-resourceId)' -split "/"

          Write-Host "##vso[task.setvariable variable=keyvaultIDAdminName;]$($keyVaultID[-1])"
          Write-Host "##vso[task.setvariable variable=keyvaultIDAdminSub;]$($keyVaultID[2])"

      - task: AzurePowerShell@5
        condition: ${{ parameters.useGeneratePasswordScript }}
        displayName: Generate-Passwords for localadmin
        inputs:
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          scriptPath: "$(System.DefaultWorkingDirectory)/${{ parameters.templateRepo }}/Features/AVDHost/Scripts/Generate-AVDPassword.ps1"
          scriptArguments: -parameterFilePath '$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)${{ parameters.csmParametersFile }}' -AZKVaultName $(keyvaultIDAdminName) -AZKVaultSubscriptionId $(keyvaultIDAdminSub)
          TargetAzurePs: LatestVersion
      - template: /.Global/Pipelines/deploy.yaml
        parameters:
          outPutPrefix: ${{ parameters.outPutPrefix }}
          templateRepo: ${{ parameters.templateRepo }}
          templateFileName: ${{ parameters.templateFileName }}
          workloadName: AVDHost
          workloadType: Features
          subscriptionId: ${{ parameters.subscriptionId }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          parametersPath: ${{ parameters.csmParametersFile }}
