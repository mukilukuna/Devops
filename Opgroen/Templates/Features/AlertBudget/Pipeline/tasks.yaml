parameters:
  - name: subscriptionId
    type: string
  - name: azureResourceManagerConnection
    type: string
  - name: location
    type: string
  - name: csmParametersFile
    type: string
  - name: templateRepo
    type: string
  - name: templateProject
    type: string
  - name: version
    type: string
  - name: templateFileName
    type: string
    default: template.bicep
  - name: outPutPrefix
    type: string
    default: ''
  - name: budgetName
    type: string

steps:
  - ${{ if and(ne(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.SourceBranch'], 'refs/heads/staging')) }}:
      - checkout: self
      - checkout: git://${{ parameters.templateProject }}/${{ parameters.templateRepo }}@refs/tags/${{ parameters.version }}
      - task: AzurePowerShell@5
        name: PsGetAlertBudget
        displayName: "PowerShell script: Get AlertBudget"
        inputs:
          azureSubscription: $(azureResourceManagerConnection)
          azurePowerShellVersion: LatestVersion
          ScriptType: FilePath
          pwsh: true
          scriptPath: "${{ parameters.templateRepo }}/Features/AlertBudget/Scripts/Get-AzAlertBudget.ps1"
          scriptArguments: >-
            -Name ${{ parameters.budgetName }}
            -SubscriptionId ${{ parameters.subscriptionId }}
      - template: /.Global/Pipelines/validate.yaml
        parameters:
          templateRepo: ${{ parameters.templateRepo }}
          templateFileName: ${{ parameters.templateFileName }}
          workloadName: AlertBudget
          workloadType: Features
          subscriptionId: ${{ parameters.subscriptionId }}
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          parametersPath: ${{ parameters.csmParametersFile }}

  - ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/staging')) }}:
      - checkout: self
      - checkout: git://${{ parameters.templateProject }}/${{ parameters.templateRepo }}@refs/tags/${{ parameters.version }}
      - task: AzurePowerShell@5
        name: PsGetAlertBudget
        displayName: "PowerShell script: Get AlertBudget"
        inputs:
          azureSubscription: $(azureResourceManagerConnection)
          azurePowerShellVersion: LatestVersion
          ScriptType: FilePath
          pwsh: true
          scriptPath: "${{ parameters.templateRepo }}/Features/AlertBudget/Scripts/Get-AzAlertBudget.ps1"
          scriptArguments: >-
            -Name ${{ parameters.budgetName }}
            -SubscriptionId ${{ parameters.subscriptionId }}
      - template: /.Global/Pipelines/deploy.yaml
        parameters:
          templateRepo: ${{ parameters.templateRepo }}
          templateFileName: ${{ parameters.templateFileName }}
          outPutPrefix: ${{ parameters.outPutPrefix }}
          workloadName: AlertBudget
          workloadType: Features
          subscriptionId: ${{ parameters.subscriptionId }}
          azureSubscription: ${{ parameters.azureResourceManagerConnection }}
          location: ${{ parameters.location }}
          parametersPath: ${{ parameters.csmParametersFile }}