trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'

    - task: AzureCLI@2
      displayName: 'Terraform Init and Plan'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        inlineScript: |
          terraform --version
          terraform init -backend-config="storage_account_name=$(storageAccountName)" -backend-config="container_name=$(containerName)" -backend-config="key=$(key)" -backend-config="access_key=$(accessKey)"
          terraform plan -out=tfplan

- stage: Deploy
  displayName: 'Terraform Apply'
  dependsOn: Plan
  condition: succeeded('Plan')
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'

    - task: AzureCLI@2
      displayName: 'Terraform Init and Apply'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        inlineScript: |
          terraform --version
          terraform init -backend-config="storage_account_name=$(storageAccountName)" -backend-config="container_name=$(containerName)" -backend-config="key=$(key)" -backend-config="access_key=$(accessKey)"
          terraform apply -auto-approve
